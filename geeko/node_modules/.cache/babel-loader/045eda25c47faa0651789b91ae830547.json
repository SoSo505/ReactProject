{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/React/React project/Geeko/geeko/src/components/navbar_components/Registration.tsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/navbar_component_styles/Registration.css\";\nimport Footer from \"../Footer\";\nimport Navbar from \"../Navbar\";\nimport RegInputs from \"./registrationComponents/RegInputs\";\nexport const Registr = {\n  cUsername: \"\",\n  cEmail: \"\",\n  cPassword: \"\",\n  canRegistrate: false,\n  alertText: \"\",\n\n  notBot(u, e, p, p1) {\n    var checkbox = document.getElementById(\"notBot\");\n\n    if (checkbox.checked == true && p == p1 && p != \"\" && p1 != \"\") {\n      this.cUsername = u;\n      this.cEmail = e;\n      this.cPassword = p;\n      this.canRegistrate = true;\n    } else if (checkbox.checked != true && p == p1) {\n      this.canRegistrate = false;\n      this.alertText = \"please click checkbox\";\n    } else if (checkbox.checked == true && p != p1) {\n      this.canRegistrate = false;\n      this.alertText = \"two password fields are not same\";\n    } else if (checkbox.checked != true && p != p1) {\n      this.canRegistrate = false;\n      this.alertText = \"please click checkbox and rewrite passwords\";\n    }\n  }\n\n};\nexport const RegContext = React.createContext(Registr);\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.regState = Registr;\n    this.state = {\n      users: []\n    };\n    this.registrateUser = this.registrateUser.bind(this);\n  }\n\n  registrateUser() {\n    var checkbox = document.getElementById(\"notBot\");\n\n    if (this.regState.canRegistrate == true) {\n      this.state.users.push(new User(this.regState.cUsername, this.regState.cEmail, this.regState.cPassword));\n      this.regState.cUsername = \"\";\n      this.regState.cEmail = \"\";\n      this.regState.cPassword = \"\";\n      this.regState.canRegistrate = false;\n      console.log(this.state.users);\n    } else if (this.regState.canRegistrate == false && checkbox.checked == false) {\n      alert(\"please click checkbox\");\n    } else if (this.regState.canRegistrate == false) {\n      alert(this.regState.alertText);\n      checkbox.checked = false;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RegContext.Provider, {\n      value: this.regState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"RegistrationBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"RegistrationForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RegInputs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      Link: true,\n      onClick: this.registrateUser,\n      className: \"RegistrationButton btn waves-effect waves-red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Registrate\"))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nclass User {\n  constructor(username, email, password) {\n    this.username = void 0;\n    this.password = void 0;\n    this.email = void 0;\n    this.username = username;\n    this.email = email;\n    this.password = password;\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Documents/React/React project/Geeko/geeko/src/components/navbar_components/Registration.tsx"],"names":["React","Component","Footer","Navbar","RegInputs","Registr","cUsername","cEmail","cPassword","canRegistrate","alertText","notBot","u","e","p","p1","checkbox","document","getElementById","checked","RegContext","createContext","Registration","constructor","props","regState","state","users","registrateUser","bind","push","User","console","log","alert","render","username","email","password"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { createRef } from \"react\";\nimport \"../../styles/navbar_component_styles/Registration.css\";\nimport Footer from \"../Footer\";\nimport Navbar from \"../Navbar\";\nimport RegInputs from \"./registrationComponents/RegInputs\";\n\n\nexport const Registr = {\n  cUsername: \"\",\n  cEmail: \"\",\n  cPassword: \"\",\n  canRegistrate: false,\n  alertText: \"\",\n  notBot(u: string, e: string, p: string, p1: string) {\n    var checkbox: any = document.getElementById(\"notBot\");\n    if (checkbox.checked == true && p == p1 && p != \"\" && p1 != \"\") {\n      this.cUsername = u;\n      this.cEmail = e;\n      this.cPassword = p;\n      this.canRegistrate = true;\n    } else if (checkbox.checked != true && p == p1) {\n      this.canRegistrate = false;\n      this.alertText = \"please click checkbox\";\n    } else if (checkbox.checked == true && p != p1) {\n      this.canRegistrate = false;\n      this.alertText = \"two password fields are not same\";\n    } else if (checkbox.checked != true && p != p1) {\n      this.canRegistrate = false;\n      this.alertText = \"please click checkbox and rewrite passwords\";\n    }\n  },\n};\nexport type RegState = typeof Registr;\nexport const RegContext = React.createContext(Registr);\n\ninterface Props {}\n\ninterface State {\n  users: Array<User>;\n}\n\nexport default class Registration extends Component<Props, State> {\n  regState: RegState = Registr;\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      users: [],\n    };\n    this.registrateUser = this.registrateUser.bind(this);\n  }\n\n  registrateUser() {\n    var checkbox: any = document.getElementById(\"notBot\");\n    if (this.regState.canRegistrate == true) {\n      this.state.users.push(\n        new User(this.regState.cUsername, this.regState.cEmail, this.regState.cPassword)\n      );\n      this.regState.cUsername = \"\";\n      this.regState.cEmail = \"\";\n      this.regState.cPassword = \"\";\n      this.regState.canRegistrate = false;\n      console.log(this.state.users);\n    } else if (\n      this.regState.canRegistrate == false &&\n      checkbox.checked == false\n    ) {\n      alert(\"please click checkbox\");\n    } else if (this.regState.canRegistrate == false) {\n      alert(this.regState.alertText);\n      checkbox.checked = false;\n    }\n  }\n\n  render() {\n    return (\n      <RegContext.Provider value={this.regState}>\n        <div className=\"home\">\n          <Navbar />\n          <div className=\"RegistrationBody\">\n            <div className=\"RegistrationForm\">\n              <RegInputs />\n              <button Link\n                onClick={this.registrateUser}\n                className=\"RegistrationButton btn waves-effect waves-red\"\n              >\n                Registrate\n              </button>\n            </div>\n          </div>\n          <Footer />\n        </div>\n      </RegContext.Provider>\n    );\n  }\n}\n\nclass User {\n  username: string;\n  password: string;\n  email: string;\n  constructor(username: string, email: string, password: string) {\n    this.username = username;\n    this.email = email;\n    this.password = password;\n  }\n}"]},"metadata":{},"sourceType":"module"}