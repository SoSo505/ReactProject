{"ast":null,"code":"// import React, { useState, useEffect } from 'react'\n// const UpdatedComponent = (OriginalComponent: any) => {\n//     function NewComponent(this: any, params:any) {\n//     const [email, setEmail] = useState('');\n//     const [emailDirty, setEmailDirty] = useState(false);\n//     const [emailError, setEmailError] = useState('Емейл не может быть пустым');\n//     const [formValid, setFormValid] = useState(false);\n//     let count: number;\n//     count = 0;\n//     useEffect(() => {\n//         if (emailError){\n//             setFormValid(false)\n//         }else\n//             setFormValid(true)\n//             count++;\n//     }, [emailError])\n//     const emailHandler = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n//         setEmail(e.target.value);\n//         const re = (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n//         if(!re.test(String(e.target.value).toLowerCase())){\n//             setEmailError('Емейл некорректен!')\n//         }else\n//             setEmailError('')\n//            // e.preventDefault();\n//     }\n//     const blurHandler = (e: React.FocusEvent<HTMLInputElement>) => {\n//         switch (e.target.name){\n//             case 'email':\n//                 setEmailDirty(true)\n//                 break\n//         }\n//     }\n//     //  emailHandler = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n//     //     const re = (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n//     //     if(!re.test(String(e.target.value).toLowerCase())){\n//     //         return ('Емейл некорректен!')\n//     //     }else\n//     //         return ''\n//     // }\n//     // passwordHandler = (e: any) =>{\n//     //     if(!e.target.value){\n//     //         return  ('пароль не может быть пустым');\n//     //     }\n//     //     if(e.target.value.length < 6 || e.target.value.length > 12 ){\n//     //         return ('Пароль должен быть длиннее 6  и меньше 12') && false;\n//     //     }else\n//     //     return true;\n//     // }\n//             return <OriginalComponent blurHandler = {this.state.blurHandler} emailHandler={this.state.emailHandler}\n//             useEffect = {this.state.useEffect} setEmail={this.state.setEmail} email={this.state.email} \n//             setEmailDirty={this.state.setEmailDirty} emailDirty={this.state.emailDirty}\n//             setEmailError={this.state.setEmailError} emailError={this.state.emailError}\n//             setFormValid={this.state.setFormValid}  formValid={this.this.state.formValid}  />\n//     }\n//     return NewComponent\n// }\n// export default UpdatedComponent","map":{"version":3,"sources":["/Users/admin/Documents/React/React project/Geeko/geeko/src/components/requiremetns_component/HocForms.tsx"],"names":[],"mappings":"AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState, useEffect } from 'react'\n\n\n// const UpdatedComponent = (OriginalComponent: any) => {\n//     function NewComponent(this: any, params:any) {\n\n//     const [email, setEmail] = useState('');\n//     const [emailDirty, setEmailDirty] = useState(false);\n//     const [emailError, setEmailError] = useState('Емейл не может быть пустым');\n//     const [formValid, setFormValid] = useState(false);\n//     let count: number;\n//     count = 0;\n\n//     useEffect(() => {\n//         if (emailError){\n//             setFormValid(false)\n//         }else\n//             setFormValid(true)\n//             count++;\n//     }, [emailError])\n        \n\n//     const emailHandler = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n//         setEmail(e.target.value);\n//         const re = (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n//         if(!re.test(String(e.target.value).toLowerCase())){\n//             setEmailError('Емейл некорректен!')\n//         }else\n//             setEmailError('')\n//            // e.preventDefault();\n//     }\n\n\n//     const blurHandler = (e: React.FocusEvent<HTMLInputElement>) => {\n//         switch (e.target.name){\n//             case 'email':\n//                 setEmailDirty(true)\n//                 break\n//         }\n//     }\n\n\n\n//     //  emailHandler = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n//     //     const re = (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n//     //     if(!re.test(String(e.target.value).toLowerCase())){\n//     //         return ('Емейл некорректен!')\n//     //     }else\n//     //         return ''\n//     // }\n\n//     // passwordHandler = (e: any) =>{\n//     //     if(!e.target.value){\n//     //         return  ('пароль не может быть пустым');\n//     //     }\n//     //     if(e.target.value.length < 6 || e.target.value.length > 12 ){\n//     //         return ('Пароль должен быть длиннее 6  и меньше 12') && false;\n//     //     }else\n//     //     return true;\n//     // }\n\n      \n//             return <OriginalComponent blurHandler = {this.state.blurHandler} emailHandler={this.state.emailHandler}\n//             useEffect = {this.state.useEffect} setEmail={this.state.setEmail} email={this.state.email} \n//             setEmailDirty={this.state.setEmailDirty} emailDirty={this.state.emailDirty}\n//             setEmailError={this.state.setEmailError} emailError={this.state.emailError}\n//             setFormValid={this.state.setFormValid}  formValid={this.this.state.formValid}  />\n//     }\n//     return NewComponent\n// }\n\n// export default UpdatedComponent"]},"metadata":{},"sourceType":"module"}