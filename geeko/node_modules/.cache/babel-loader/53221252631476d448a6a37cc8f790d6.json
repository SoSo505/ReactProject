{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/React/React project/Geeko/geeko/src/components/navbar_components/registrationComponents/RegInputs.tsx\";\nimport React from \"react\";\nimport { RegContext } from \"../Registration\";\nvar username = \"\";\nvar email = \"\";\nvar password = \"\";\nvar password1 = \"\";\nvar usernameRef = React.createRef();\nvar emailRef = React.createRef();\nvar passwordRef = React.createRef();\nvar password1Ref = React.createRef();\nexport default function RegInputs() {\n  var regContext = React.useContext(RegContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RegistrationInputs\",\n    onDoubleClick: see,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"RegistrationInput\",\n    ref: usernameRef,\n    onChange: updateUsername,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"RegistrationInput\",\n    ref: emailRef,\n    onChange: updateEmail,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"RegistrationInput\",\n    ref: passwordRef,\n    onChange: updatePassword,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"RegistrationInput\",\n    ref: password1Ref,\n    onChange: confirmPassword1,\n    placeholder: \"Confirm password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"NotBot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: () => regContext.notBot(username, email, password, password1),\n    id: \"notBot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"I'm not bot\")));\n}\n\nfunction see() {\n  console.log(username);\n  console.log(email);\n  console.log(password);\n}\n\nfunction updateUsername() {\n  var _usernameRef$current;\n\n  username = (_usernameRef$current = usernameRef.current) === null || _usernameRef$current === void 0 ? void 0 : _usernameRef$current.value;\n}\n\nfunction updateEmail() {\n  var _emailRef$current;\n\n  email = (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value;\n}\n\nfunction updatePassword() {\n  var _passwordRef$current;\n\n  password = (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value;\n}\n\nfunction confirmPassword1() {\n  var _password1Ref$current;\n\n  password1 = (_password1Ref$current = password1Ref.current) === null || _password1Ref$current === void 0 ? void 0 : _password1Ref$current.value;\n}","map":{"version":3,"sources":["/Users/admin/Documents/React/React project/Geeko/geeko/src/components/navbar_components/registrationComponents/RegInputs.tsx"],"names":["React","RegContext","username","email","password","password1","usernameRef","createRef","emailRef","passwordRef","password1Ref","RegInputs","regContext","useContext","see","updateUsername","updateEmail","updatePassword","confirmPassword1","notBot","console","log","current","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { RegContext } from \"../Registration\";\n\nvar username: any = \"\";\nvar email: any = \"\";\nvar password: any = \"\";\nvar password1: any = \"\";\n\nvar usernameRef = React.createRef<HTMLInputElement>();\nvar emailRef = React.createRef<HTMLInputElement>();\nvar passwordRef = React.createRef<HTMLInputElement>();\nvar password1Ref = React.createRef<HTMLInputElement>();\n\nexport default function RegInputs() {\n  var regContext = React.useContext(RegContext);\n\n  return (\n    <div className=\"RegistrationInputs\" onDoubleClick={see}>\n      <input\n        type=\"text\"\n        className=\"RegistrationInput\"\n        ref={usernameRef}\n        onChange={updateUsername}\n        placeholder=\"Username\"\n      />\n      <input\n        type=\"text\"\n        className=\"RegistrationInput\"\n        ref={emailRef}\n        onChange={updateEmail}\n        placeholder=\"Email\"\n      />\n      <input\n        type=\"text\"\n        className=\"RegistrationInput\"\n        ref={passwordRef}\n        onChange={updatePassword}\n        placeholder=\"Password\"\n      />\n      <input\n        type=\"text\"\n        className=\"RegistrationInput\"\n        ref={password1Ref}\n        onChange={confirmPassword1}\n        placeholder=\"Confirm password\"\n      />\n      <label className=\"NotBot\">\n        <input\n          type=\"checkbox\"\n          onClick={() =>\n            regContext.notBot(username, email, password, password1)\n          }\n          id=\"notBot\"\n        />\n        <span>I'm not bot</span>\n      </label>\n    </div>\n  );\n}\n\nfunction see(){\n  console.log(username)\n  console.log(email)\n  console.log(password)\n}\n\nfunction updateUsername() {\n  username = usernameRef.current?.value;\n}\nfunction updateEmail() {\n  email = emailRef.current?.value;\n}\nfunction updatePassword() {\n  password = passwordRef.current?.value;\n}\nfunction confirmPassword1() {\n  password1 = password1Ref.current?.value;\n}"]},"metadata":{},"sourceType":"module"}