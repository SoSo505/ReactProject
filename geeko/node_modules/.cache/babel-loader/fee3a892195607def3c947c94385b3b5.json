{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/React/React project/Geeko/geeko/src/components/requiremetns_component/HocForms.tsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst UpdatedComponent = OriginalComponent => {\n  function NewComponent(params) {\n    const [email, setEmail] = useState('');\n    const [emailDirty, setEmailDirty] = useState(false);\n    const [emailError, setEmailError] = useState('Емейл не может быть пустым');\n    const [formValid, setFormValid] = useState(false);\n    let count;\n    count = 0;\n    useEffect(() => {\n      if (emailError) {\n        setFormValid(false);\n      } else setFormValid(true);\n\n      count++;\n    }, [emailError]);\n\n    const emailHandler = e => {\n      setEmail(e.target.value);\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (!re.test(String(e.target.value).toLowerCase())) {\n        setEmailError('Емейл некорректен!');\n      } else setEmailError(''); // e.preventDefault();\n\n    };\n\n    const blurHandler = e => {\n      switch (e.target.name) {\n        case 'email':\n          setEmailDirty(true);\n          break;\n      }\n    }; //  emailHandler = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n    //     const re = (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    //     if(!re.test(String(e.target.value).toLowerCase())){\n    //         return ('Емейл некорректен!')\n    //     }else\n    //         return ''\n    // }\n    // passwordHandler = (e: any) =>{\n    //     if(!e.target.value){\n    //         return  ('пароль не может быть пустым');\n    //     }\n    //     if(e.target.value.length < 6 || e.target.value.length > 12 ){\n    //         return ('Пароль должен быть длиннее 6  и меньше 12') && false;\n    //     }else\n    //     return true;\n    // }\n\n\n    return /*#__PURE__*/React.createElement(OriginalComponent, {\n      blurHandler: this.state.blurHandler,\n      emailHandler: this.state.emailHandler,\n      useEffect: this.state.useEffect,\n      setEmail: this.state.setEmail,\n      email: this.state.email,\n      setEmailDirty: this.state.setEmailDirty,\n      emailDirty: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }\n    });\n  }\n\n  return NewComponent;\n};\n\nexport default UpdatedComponent;","map":{"version":3,"sources":["/Users/admin/Documents/React/React project/Geeko/geeko/src/components/requiremetns_component/HocForms.tsx"],"names":["React","useState","useEffect","UpdatedComponent","OriginalComponent","NewComponent","params","email","setEmail","emailDirty","setEmailDirty","emailError","setEmailError","formValid","setFormValid","count","emailHandler","e","target","value","re","test","String","toLowerCase","blurHandler","name","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,gBAAgB,GAAIC,iBAAD,IAA4B;AACjD,WAASC,YAAT,CAAiCC,MAAjC,EAA6C;AAE7C,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,UAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,UAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,4BAAD,CAA5C;AACA,UAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAIc,KAAJ;AACAA,IAAAA,KAAK,GAAG,CAAR;AAEAb,IAAAA,SAAS,CAAC,MAAM;AACZ,UAAIS,UAAJ,EAAe;AACXG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAFD,MAGIA,YAAY,CAAC,IAAD,CAAZ;;AACAC,MAAAA,KAAK;AACZ,KANQ,EAMN,CAACJ,UAAD,CANM,CAAT;;AASA,UAAMK,YAAY,GAAIC,CAAD,IAA8D;AAC/ET,MAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACA,YAAMC,EAAE,GAAI,wJAAZ;;AACA,UAAG,CAACA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACL,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN,CAAuBI,WAAvB,EAAR,CAAJ,EAAkD;AAC9CX,QAAAA,aAAa,CAAC,oBAAD,CAAb;AACH,OAFD,MAGIA,aAAa,CAAC,EAAD,CAAb,CAN2E,CAO5E;;AACN,KARD;;AAWA,UAAMY,WAAW,GAAIP,CAAD,IAA2C;AAC3D,cAAQA,CAAC,CAACC,MAAF,CAASO,IAAjB;AACI,aAAK,OAAL;AACIf,UAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AAHR;AAKH,KAND,CA7B6C,CAuC7C;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGQ,wBAAO,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAI,KAAKgB,KAAL,CAAWF,WAA7C;AAA0D,MAAA,YAAY,EAAE,KAAKE,KAAL,CAAWV,YAAnF;AACP,MAAA,SAAS,EAAI,KAAKU,KAAL,CAAWxB,SADjB;AAC4B,MAAA,QAAQ,EAAE,KAAKwB,KAAL,CAAWlB,QADjD;AAC2D,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWnB,KAD7E;AAEP,MAAA,aAAa,EAAE,KAAKmB,KAAL,CAAWhB,aAFnB;AAEkC,MAAA,UAAU,MAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAGP;;AACD,SAAOL,YAAP;AACH,CAhED;;AAkEA,eAAeF,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n\nconst UpdatedComponent = (OriginalComponent: any) => {\n    function NewComponent(this: any, params:any) {\n\n    const [email, setEmail] = useState('');\n    const [emailDirty, setEmailDirty] = useState(false);\n    const [emailError, setEmailError] = useState('Емейл не может быть пустым');\n    const [formValid, setFormValid] = useState(false);\n    let count: number;\n    count = 0;\n\n    useEffect(() => {\n        if (emailError){\n            setFormValid(false)\n        }else\n            setFormValid(true)\n            count++;\n    }, [emailError])\n        \n\n    const emailHandler = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n        setEmail(e.target.value);\n        const re = (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n        if(!re.test(String(e.target.value).toLowerCase())){\n            setEmailError('Емейл некорректен!')\n        }else\n            setEmailError('')\n           // e.preventDefault();\n    }\n\n\n    const blurHandler = (e: React.FocusEvent<HTMLInputElement>) => {\n        switch (e.target.name){\n            case 'email':\n                setEmailDirty(true)\n                break\n        }\n    }\n\n\n\n    //  emailHandler = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n    //     const re = (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    //     if(!re.test(String(e.target.value).toLowerCase())){\n    //         return ('Емейл некорректен!')\n    //     }else\n    //         return ''\n    // }\n\n    // passwordHandler = (e: any) =>{\n    //     if(!e.target.value){\n    //         return  ('пароль не может быть пустым');\n    //     }\n    //     if(e.target.value.length < 6 || e.target.value.length > 12 ){\n    //         return ('Пароль должен быть длиннее 6  и меньше 12') && false;\n    //     }else\n    //     return true;\n    // }\n\n      \n            return <OriginalComponent blurHandler = {this.state.blurHandler} emailHandler={this.state.emailHandler}\n            useEffect = {this.state.useEffect} setEmail={this.state.setEmail} email={this.state.email} \n            setEmailDirty={this.state.setEmailDirty} emailDirty  />\n    }\n    return NewComponent\n}\n\nexport default UpdatedComponent"]},"metadata":{},"sourceType":"module"}